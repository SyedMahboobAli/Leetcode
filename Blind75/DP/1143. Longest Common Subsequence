class Solution:
    def longestCommonSubsequence(self, text1: str, text2: str) -> int:
        n=len(text1)
        m=len(text2)
        dp=[[0]*(m+1) for _ in range(n+1)] # first row and col all 000
        '''
        a  c  e
     0  0  0  0
  a  0  1  1  1
  b  0  1  1  1
  c  0  1  2  2
  d  0  1  2  2
  e  0  1  2  3 '''
        for i in range(1,n+1):
            for j in range(1,m+1):
                if(text1[i-1]==text2[j-1]): 
                    # index out of bound if we use i, j.  and array traversal is 1 to n+1 but in text arrays we use 0 to n, so using i-1
                    dp[i][j]=1+dp[i-1][j-1]
                else:
                    dp[i][j]=max(dp[i-1][j],dp[i][j-1])
        return dp[n][m]
